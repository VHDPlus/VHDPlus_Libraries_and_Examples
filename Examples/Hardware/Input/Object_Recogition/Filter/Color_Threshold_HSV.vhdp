Component Color_Threshold_HSV_Filter
(
    Generic
    (
        CLK_Edge    : BOOLEAN := true; --true = rising edge
    );
    
    H_Min : IN NATURAL := 0;   --0 = red => 30 yellow => 60 green => 90 turquoise
    H_Max : IN NATURAL := 180; --180 = red <= 150 pink <= 120 Blue
    
    S_Min : IN NATURAL := 0;   --low saturation
    S_Max : IN NATURAL := 255; --high saturation
    
    V_Min : IN NATURAL := 0;   --dark
    V_Max : IN NATURAL := 255; --bright
    
    iStream    : in   rgb_stream;
    oStream    : out  rgb_stream;
)
{
    SIGNAL iStream_buf    : rgb_stream;
    SIGNAL oStream_buf    : rgb_stream;
    
    oStream.New_Pixel <= iStream.New_Pixel;
    
    SIGNAL New_Pixel_Buf : STD_LOGIC;
    New_Pixel_Buf <= iStream.New_Pixel when CLK_Edge else NOT iStream.New_Pixel;

    Process ()
    {
        If(rising_edge(New_Pixel_Buf))
        {
            iStream_buf <= iStream;
            
            oStream_buf.Column <= iStream_buf.Column;
            oStream_buf.Row    <= iStream_buf.Row;
            
            oStream.R <= oStream_buf.R;
            oStream.G <= oStream_buf.G;
            oStream.B <= oStream_buf.B;
            oStream.Column <= oStream_buf.Column;
            oStream.Row <= oStream_buf.Row;
            
            VARIABLE in_range : BOOLEAN;
            in_range := (((UNSIGNED(iStream_buf.R) >= H_Min AND UNSIGNED(iStream_buf.R) <= H_Max) AND H_Min <= H_Max) OR ((UNSIGNED(iStream_buf.R) >= H_Min OR UNSIGNED(iStream_buf.R) <= H_Max) AND H_Min > H_Max)) AND
            UNSIGNED(iStream_buf.G) >= S_Min AND UNSIGNED(iStream_buf.G) <= S_Max AND UNSIGNED(iStream_buf.B) >= V_Min AND UNSIGNED(iStream_buf.B) <= V_Max;
            
            If(in_range)
            {
                oStream_buf.R <= (others => '1');
                oStream_buf.G <= (others => '1');
                oStream_buf.B <= (others => '1');
            }
            Else
            {
                oStream_buf.R <= (others => '0');
                oStream_buf.G <= (others => '0');
                oStream_buf.B <= (others => '0');
            }
        }
    }
    
}