-- fpgagate.com: FPGA Projects, Verilog projects, VHDL projects
-- vhdl projects: Gaussian Filter
-- this filter is used ton convolute the input data with the following 3x3 Matrix
--   1 | 1  2  1 |
--  -- | 2  4  2 |
-- 256 | 1  2  1 |

Component Gaussian_Filter
(
    Generic
    (
        depth : integer:=650;
    );
    New_Pixel  : in   STD_LOGIC;
    iColumn    : IN   NATURAL range 0 to 639 := 0;
    iRow       : IN   NATURAL range 0 to 479 := 0;
    iPixel     : in   STD_LOGIC_VECTOR (7 downto 0);
    oColumn    : OUT  NATURAL range 0 to 639 := 0;
    oRow       : OUT  NATURAL range 0 to 479 := 0;
    oPixel     : out  STD_LOGIC_VECTOR (7 downto 0);
)
{
    --oColumn <= iColumn - 8 when iColumn > 7 else 649-iColumn;
    --oRow    <= iRow - 2 when iRow > 1 else 479-iRow;
    oColumn <= iColumn - 1 when iColumn > 0 else 649-iColumn;
    oRow    <= iRow - 1 when iRow > 0 else 479-iRow;
    
    -- these are the first coloumn of the matrix
    signal GR11 : std_logic_vector (12 downto 0):=(others=>'0');
    signal GR12 : std_logic_vector (12 downto 0):=(others=>'0');
    signal GR13 : std_logic_vector (12 downto 0):=(others=>'0');
    -- these are the second coloumn of the matrix
    signal GR21 : std_logic_vector (12 downto 0):=(others=>'0');
    signal GR22 : std_logic_vector (12 downto 0):=(others=>'0');
    signal GR23 : std_logic_vector (12 downto 0):=(others=>'0');
    -- these are the third coloumn of the matrix
    signal GR31 : std_logic_vector (12 downto 0):=(others=>'0');
    signal GR32 : std_logic_vector (12 downto 0):=(others=>'0');
    signal GR33 : std_logic_vector (12 downto 0):=(others=>'0');
    -- this signal is used to get the output of the adder tree
    signal data : unsigned (12 downto 0):=(others=>'0');
    
    SIGNAL reset : STD_LOGIC;
    reset <= '1' when iColumn = 649-11 else '0';
    
    NewComponent LineBuffer
    (
        depth     => depth,
        width     => 8,
        
        Reset     => reset,
        new_pixel => new_pixel,
        pixel_in  => iPixel,
        GR11      => GR11(7 downto 0),
        GR12      => GR12(8 downto 1),
        GR13      => GR13(7 downto 0),
        GR21      => GR21(8 downto 1),
        GR22      => GR22(9 downto 2),
        GR23      => GR23(8 downto 1),
        GR31      => GR31(7 downto 0),
        GR32      => GR32(8 downto 1),
        GR33      => GR33(7 downto 0),
    );
    
    
    data <= UNSIGNED(GR11) + UNSIGNED(GR11) + UNSIGNED(GR12) + UNSIGNED(GR13) +
    UNSIGNED(GR21) + UNSIGNED(GR22) + UNSIGNED(GR23) + UNSIGNED(GR31) +
    UNSIGNED(GR32) + UNSIGNED(GR33);
    
    oPixel <= STD_LOGIC_VECTOR(data(11 downto 4)) when data(12) = '0' else (others => '1');
    
    --oPixel <= STD_LOGIC_VECTOR(GR22(9 downto 2));
}