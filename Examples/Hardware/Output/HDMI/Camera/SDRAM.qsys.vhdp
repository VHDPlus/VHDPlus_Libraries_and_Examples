Component SDRAM
(
    clk_in_clk       : in    std_logic                     := '0';             -- clk_in.clk
    reset_reset_n    : in    std_logic                     := '0';             --  reset.reset_n
    s1_address       : in    std_logic_vector(21 downto 0) := (others => '0'); --     s1.address
    s1_byteenable_n  : in    std_logic_vector(1 downto 0)  := (others => '0'); --       .byteenable_n
    s1_chipselect    : in    std_logic                     := '0';             --       .chipselect
    s1_writedata     : in    std_logic_vector(15 downto 0) := (others => '0'); --       .writedata
    s1_read_n        : in    std_logic                     := '0';             --       .read_n
    s1_write_n       : in    std_logic                     := '0';             --       .write_n
    s1_readdata      : out   std_logic_vector(15 downto 0);                    --       .readdata
    s1_readdatavalid : out   std_logic;                                        --       .readdatavalid
    s1_waitrequest   : out   std_logic;                                        --       .waitrequest
    sdram_addr       : out   std_logic_vector(11 downto 0);                    --  sdram.addr
    sdram_ba         : out   std_logic_vector(1 downto 0);                     --       .ba
    sdram_cas_n      : out   std_logic;                                        --       .cas_n
    sdram_cke        : out   std_logic;                                        --       .cke
    sdram_cs_n       : out   std_logic;                                        --       .cs_n
    sdram_dq         : inout std_logic_vector(15 downto 0) := (others => '0'); --       .dq
    sdram_dqm        : out   std_logic_vector(1 downto 0);                     --       .dqm
    sdram_ras_n      : out   std_logic;                                        --       .ras_n
    sdram_we_n       : out   std_logic;                                         --       .we_n
)
{
    
}