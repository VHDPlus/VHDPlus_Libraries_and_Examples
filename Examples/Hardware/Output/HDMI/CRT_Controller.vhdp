Component CRT_Controller
(
    --RAM interface (VGA 24bit)
    Read_Column : OUT    NATURAL range 0 to 639 := 0;
    Read_Row    : OUT    NATURAL range 0 to 479 := 0;
    Read_Data   : IN     STD_LOGIC_VECTOR(23 downto 0) := (others => '0');

    --Video stream output
    VS_PCLK    : OUT    STD_LOGIC;
    VS_SCLK    : OUT    STD_LOGIC;
    VS_R       : OUT    STD_LOGIC_VECTOR (7 downto 0);
    VS_G       : OUT    STD_LOGIC_VECTOR (7 downto 0);
    VS_B       : OUT    STD_LOGIC_VECTOR (7 downto 0);
    VS_HS      : OUT    STD_LOGIC;
    VS_VS      : OUT    STD_LOGIC;
    VS_DE      : OUT    STD_LOGIC;
)
{
    VS_PCLK <= PLL_c0;
    VS_SCLK <= PLL_c1;
    
    SIGNAL PLL_c0     : STD_LOGIC;
    SIGNAL PLL_c1     : STD_LOGIC;
    NewComponent PLL
    (
        inclk0 => CLK,
        c0     => PLL_c0, --25MHz
        c1     => PLL_c1, --250MHz
    );
    
    CONSTANT porchHF : NATURAL := 640; --start of horizntal front porch
    CONSTANT syncH   : NATURAL := 656; --start of horizontal sync
    CONSTANT porchHB : NATURAL := 752; --start of horizontal back porch
    CONSTANT maxH    : NATURAL := 799; --total length of line
    
    CONSTANT porchVF : NATURAL := 480; --start of vertical front porch
    CONSTANT syncV   : NATURAL := 490; --start of vertical sync
    CONSTANT porchVB : NATURAL := 492; --start of vertical back porch
    CONSTANT maxV    : NATURAL := 525; --total rows
    
    Process ()
    {
        If(rising_edge(PLL_c0))
        {
            VARIABLE xCount : INTEGER range 0 to maxH := 0;
            VARIABLE yCount : INTEGER range 0 to maxV := 0;
            If(xCount < maxH)
            {
                xCount := xCount + 1;
            }
            Else
            {
                xCount := 0;
                If(yCount < maxV)
                {
                    yCount := yCount + 1;
                }
                Else
                {
                    yCount := 0;
                }
            }
            
            --Enable '1' while in display area
            If(xCount < porchHF AND yCount < porchVF)
            {
                VS_DE <= '1';
                
                --Set RAM address for next pixel
                If(yCount < 479){ Read_Row <= (yCount+1); }
                Else            { Read_Row <= 0; }
                
                If(xCount < 639){ Read_Column <= (xCount+1); }
                Else            { Read_Column <= 0; }

                --Set pixel data
                VS_R <= Read_Data(23 downto 16);
                VS_G <= Read_Data(15 downto 8);
                VS_B <= Read_Data(7 downto 0);
            }
            Else
            {
                VS_DE <= '0';
                --Check for HS
                If(xCount >= syncH AND xCount < porchHB)
                {
                    VS_HS <= '0';
                }
                Else
                {
                    VS_HS <= '1';
                }
                --Check for VS
                If(yCount >= syncV AND yCount < porchVB)
                {
                    VS_VS <= '0';
                }
                Else
                {
                    VS_VS <= '1';
                }
            }
        }
    }
}