Main
(
    led           : OUT STD_LOGIC := '0';
    RX            : IN  STD_LOGIC;
    TX            : OUT STD_LOGIC;
)
{
    SIGNAL UART_Interface_TX_Enable     : STD_LOGIC;
    SIGNAL UART_Interface_TX_Busy       : STD_LOGIC;
    SIGNAL UART_Interface_TX_Data       : STD_LOGIC_VECTOR (7 DOWNTO 0);
    SIGNAL UART_Interface_RX_Busy       : STD_LOGIC;
    SIGNAL UART_Interface_RX_Data       : STD_LOGIC_VECTOR (7 DOWNTO 0);
    SIGNAL UART_Interface_RX_Error      : STD_LOGIC;
    
    NewComponent UART_Interface
    (
        Baud_Rate     => 9600,
        
        RX            => RX,
        TX            => TX,
        TX_Enable     => UART_Interface_TX_Enable,
        TX_Busy       => UART_Interface_TX_Busy,
        TX_Data       => UART_Interface_TX_Data,
        RX_Busy       => UART_Interface_RX_Busy,
        RX_Data       => UART_Interface_RX_Data,
        RX_Error      => UART_Interface_RX_Error,
    );
    
    SIGNAL blink_speed : NATURAL := 100;
    
    Process ()
    {
        Thread
        {
            led <= '1';
            Wait(blink_speed*12000);
            led <= '0';
            Wait(blink_speed*12000);
        }

        Thread
        {
            --Create string for received data
            NewFunction newString (receive_string); --Create RAM for string
            --Create string for final response
            NewFunction newString (transmit_string);

            --Ask for blink speed---------------------------------------------------------------
            
            NewFunction assignString (s"Blink speed in ms:", askForSpeed); --Create ROM with string
            
            --Send "Blink speed in ms:\n" string
            NewFunction printString (askForSpeed, UART_Interface_TX_Data, UART_Interface_TX_Busy, UART_Interface_TX_Enable);

            --Receive response from user
            NewFunction readString (receive_string, UART_Interface_RX_Data, UART_Interface_RX_Busy);
            
            --Save speed and send response-------------------------------------------------------
            
            --Convert response from user to natural
            NewFunction stringToNatural (receive_string, blink_speed);
            
            --Convert speed back to string (to show that convertion was successfull)
            NewFunction naturalToStringInst (blink_speed, receive_string, BCD_Enable, BCD_Busy, BCD_Binary, BCD_Decimal);

            NewFunction assignString (s"Speed changed to: ", sendChanged);
            
            --transmit_string = "Speed changed to: " + blink_speed + "\n"
            NewFunction stringConcat (sendChanged, receive_string, transmit_string);
            NewFunction charAppend (s"\n", transmit_string);
            
            --Send combined string
            NewFunction printString (transmit_string, UART_Interface_TX_Data, UART_Interface_TX_Busy, UART_Interface_TX_Enable);
        }
    }
}