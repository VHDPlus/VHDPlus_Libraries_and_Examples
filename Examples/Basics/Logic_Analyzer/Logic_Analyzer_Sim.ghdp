Component Logic_Analyzer_tb()
{
    SIGNAL finished : STD_LOGIC:= '0';
    CONSTANT period_time : TIME := 83333 ps;

    Process Sim_finished()
    {
        wait for 100 us;
        finished <= '1';
        wait;
    }

    NewComponent Logic_Analyzer
    (
        Max_Samples => Max_Samples,
        CLK_Frequency => CLK_Frequency,
        Channels => Channels,
        Rate_Div => Rate_Div,
        Run => Run,
        Full => Full,
        Inputs => Inputs,
        Address => Address,
        Outputs => Outputs,
        CLK => CLK,
    );

    SIGNAL Max_Samples : NATURAL  := 1000000;
    SIGNAL CLK_Frequency : NATURAL  := 12000000;
    SIGNAL Channels : NATURAL  := 16;
    SIGNAL Rate_Div : NATURAL range 1 to CLK_Frequency := 12;
    SIGNAL Run : STD_LOGIC  := '0';
    SIGNAL Full : STD_LOGIC  := '0';
    SIGNAL Inputs : STD_LOGIC_VECTOR (Channels-1 downto 0) := (others => '0');
    SIGNAL Address : NATURAL range 0 to Max_Samples := 0;
    SIGNAL Outputs : STD_LOGIC_VECTOR (Channels-1 downto 0);
    SIGNAL CLK : STD_LOGIC := '0';


    Process Sim_Rate_Div()
    {
        While(finished /= '1')
        {
            Rate_Div <= 1;
            wait for 3 us;
            Rate_Div <= 2;
            wait for 3 us;
            Rate_Div <= 3;
            wait for 3 us;
            Rate_Div <= 4;
            wait for 3 us;
            Rate_Div <= 5;
            wait for 6 us;
            Rate_Div <= 6;
            wait for 6 us;
            Rate_Div <= 7;
            wait for 6 us;
            Rate_Div <= 8;
            wait for 6 us;
            Rate_Div <= 9;
            wait for 6 us;
            Rate_Div <= 10;
            wait for 6 us;
            wait;
        }
        wait;
    }

    Process Sim_Run()
    {
        While(finished /= '1')
        {
            Run <= '1';
            wait for 6 us;
            Run <= '0';
            wait for 6 us;
            Run <= '1';
            wait for 6 us;
            wait;
        }
        wait;
    }

    Process Sim_Inputs()
    {
        While(finished /= '1')
        {
            Inputs <= x"3521";
            wait for 6 us;
            Inputs <= x"3df5";
            wait for 6 us;
            wait;
        }
        wait;
    }

    Process Sim_Address()
    {
        While(finished /= '1')
        {
            wait;
        }
        wait;
    }

    Process Sim_CLK()
    {
        While(finished /= '1')
        {
            CLK <= '0';
            wait for period_time/2;
            CLK <= '1';
            wait for period_time/2;
        }
        wait;
    }
}