Component AR0830_Cam_Config
(
    Include
    (
        Image_Data_Package.all,
    );
    Generic
    (
        CLK_Frequency : NATURAL := 12000000;
    );
    Reset       : IN STD_LOGIC := '0';
    
    Cam_Reset   : OUT STD_LOGIC := '1';
    
    SCL         : INOUT STD_LOGIC;
    SDA         : INOUT STD_LOGIC;
    
    iStream     : IN  rgb_stream; --Brighness Adjust
    
    debug       : OUT STD_LOGIC_VECTOR(7 downto 0);
)
{
    SIGNAL Gain : NATURAL range 0 to 127 := 20;
    
    Process ()
    {
        If(rising_edge(iStream.New_Pixel))
        {
            CONSTANT Bright_Max : NATURAL := ((30*Image_Width)/100)*Image_Height;
            CONSTANT Dark_Max : NATURAL := ((10*Image_Width)/100)*Image_Height;
            VARIABLE Bright_Cnt : NATURAL range 0 to Bright_Max := 0;
            VARIABLE Dark_Cnt : NATURAL range 0 to Dark_Max := 100;
            SIGNAL Correct_B : NATURAL range 0 to 2 := 0;
            If(iStream.Row = 0 AND iStream.Column = 0)
            {
                If(Bright_Cnt = Bright_Max)
                {
                    Correct_B <= 2;
                }
                Elsif(Dark_Cnt < Dark_Max)
                {
                    Correct_B <= 1;
                }
                Else
                {
                    Correct_B <= 0;
                }
            }
            Elsif(iStream.Column < Image_Width-1)
            {
                If(iStream.Row = 0 AND iStream.Column = 1)
                {
                    Bright_Cnt := 0;
                    Dark_Cnt   := 0;
                }
                if (UNSIGNED(iStream.R) > 250 OR UNSIGNED(iStream.G) > 250 OR UNSIGNED(iStream.B) > 250)
                {
                    If(Bright_Cnt < Bright_Max)
                    {
                        Bright_Cnt := Bright_Cnt + 1;
                    }
                }
                if (UNSIGNED(iStream.R) > 220 OR UNSIGNED(iStream.G) > 220 OR UNSIGNED(iStream.B) > 220)
                {
                    If(Dark_Cnt < Dark_Max)
                    {
                        Dark_Cnt := Dark_Cnt + 1;
                    }
                }
            }
        }
    }
    
    CONSTANT debug_en : BOOLEAN := false;
    
    --Send initial data on startup
    Process Cam_Init
    (
        VARIABLE state  : NATURAL range 0 to 10 := 10;
        VARIABLE count  : NATURAL range 0 to CLK_Frequency/10 := 0;
        VARIABLE init   : BOOLEAN := true;
    )
    {
        If(Reset = '1')
        {
            d_address <= 0;
            state := 10;
            count := 0;
            I2C_Master_Interface_Enable <= '0';
            Cam_Reset <= '0';
            init := true;
        }
        Else
        {
            If(state = 0)
            {
                If(I2C_Master_Interface_Busy = '0')
                {
                    I2C_Master_Interface_Address <= "0110110";
                    I2C_Master_Interface_RW      <= '0';
                    I2C_Master_Interface_Data_Wr <= d_sreg(15 downto 8);
                    I2C_Master_Interface_Enable  <= '1';
                    state := 1;
                }
            }
            Elsif(state = 1)
            {
                If(I2C_Master_Interface_Busy = '1')
                {
                    I2C_Master_Interface_Data_Wr <= d_sreg(7 downto 0);
                    
                    state := 2;
                }
            }
            Elsif(state = 2)
            {
                If(I2C_Master_Interface_Busy = '0')
                {
                    If(d_dat2_en = '1') { state := 3; }
                    Else { state := 5; }
                }
            }
            Elsif(state = 3)
            {
                If(I2C_Master_Interface_Busy = '1')
                {
                    if(set_table)
                    {
                        I2C_Master_Interface_Data_Wr <= STD_LOGIC_VECTOR(TO_UNSIGNED(Gain, 8));
                    }
                    Else
                    {
                        I2C_Master_Interface_Data_Wr <= d_data(15 downto 8);
                    }
                    state := 4;
                }
            }
            Elsif(state = 4)
            {
                If(I2C_Master_Interface_Busy = '0')
                {
                    state := 5;
                }
            }
            Elsif(state = 5)
            {
                If(I2C_Master_Interface_Busy = '1')
                {
                    if(set_table)
                    {
                        I2C_Master_Interface_Data_Wr <= STD_LOGIC_VECTOR(TO_UNSIGNED(Gain, 8));
                    }
                    Else
                    {
                        I2C_Master_Interface_Data_Wr <= d_data(7 downto 0);
                    }
                    
                    state := 6;
                }
            }
            Elsif(state = 6)
            {
                If(I2C_Master_Interface_Busy = '0')
                {
                    I2C_Master_Interface_Enable  <= '0';
                    state := 7;
                }
            }
            Elsif(state = 7)
            {
                If(I2C_Master_Interface_Busy = '1')
                {
                    state := 8;
                }
            }
            Elsif(state = 8)
            {
                If(init)
                {
                    if(d_address < default_init_length-1)
                    {
                        d_address <= d_address + 1;
                        state := 9;
                    }
                    Else
                    {
                        init := false;
                    }
                }
                Else
                {
                    
                    VARIABLE ISSP_reg : STD_LOGIC := '0';
                    If(debug_en AND ISSP_source(32) = '1' AND ISSP_reg = '0')
                    {
                        state := 9;
                    }
                    Else
                    {
                        VARIABLE set_table      : BOOLEAN := false;
                        VARIABLE brightness_cnt : NATURAL range 0 to CLK_Frequency/20 := 0;
                        
                        If(set_table)
                        {
                            d_address <= d_address + 1;
                            set_table := false;
                            state := 9;
                        }
                        Else
                        {
                            d_address <= default_init_length-3;
                            
                            If(brightness_cnt < CLK_Frequency/20)
                            {
                                brightness_cnt := brightness_cnt + 1;
                            }
                            Else
                            {
                                brightness_cnt := 0;
                                If(Correct_B > 0)
                                {
                                    If(Correct_B = 2)
                                    {
                                        If(Gain > 0)
                                        {
                                            Gain <= Gain - 1;
                                        }
                                    }
                                    Else
                                    {
                                        If(Gain < 127)
                                        {
                                            Gain <= Gain + 1;
                                        }
                                    }
                                    state := 9;
                                    set_table := true;
                                }
                            }
                        }
                    }
                    ISSP_reg := ISSP_source(32);
                    
                }
            }
            Else
            {
                If(state = 10)
                {
                    Cam_Reset <= '0';
                }
                Else
                {
                    Cam_Reset <= '1';
                }
                
                If((d_address < 2 OR d_address = default_init_length-1) AND count < CLK_Frequency/10) --100ms
                {
                    count := count + 1;
                }
                Elsif(count < CLK_Frequency/1000) --1ms
                {
                    count := count + 1;
                }
                Else
                {
                    count := 0;
                    If(state = 10)
                    {
                        state := 9;
                    }
                    Else
                    {
                        state := 0;
                    }
                }
            }
            
        }
    }
    
    SIGNAL ISSP_source: std_logic_vector(32 downto 0) := (others => '0');
    Generate(if debug_en)
    {
        /*
        NewComponent ISSP
        (
            source => ISSP_source,
        );
        */
    }

    SIGNAL I2C_Master_Interface_Enable        : STD_LOGIC := '0';
    SIGNAL I2C_Master_Interface_Address       : STD_LOGIC_VECTOR (6 DOWNTO 0) := (others => '0');
    SIGNAL I2C_Master_Interface_RW            : STD_LOGIC := '0';
    SIGNAL I2C_Master_Interface_Data_Wr       : STD_LOGIC_VECTOR (7 DOWNTO 0) := (others => '0');
    SIGNAL I2C_Master_Interface_Busy          : STD_LOGIC;
    SIGNAL I2C_Master_Interface_Data_RD       : STD_LOGIC_VECTOR (7 DOWNTO 0);
    SIGNAL I2C_Master_Interface_Ack_Error     : STD_LOGIC;
    

    NewComponent I2C_Master_Interface
    (
        CLK_Frequency => CLK_Frequency,
        Bus_CLK       => 100000,
        
        Reset         => Reset,
        Enable        => I2C_Master_Interface_Enable,
        Address       => I2C_Master_Interface_Address,
        RW            => I2C_Master_Interface_RW,
        Data_Wr       => I2C_Master_Interface_Data_Wr,
        Busy          => I2C_Master_Interface_Busy,
        Data_RD       => I2C_Master_Interface_Data_RD,
        Ack_Error     => I2C_Master_Interface_Ack_Error,
        SDA           => SDA,
        SCL           => SCL,
    );
    
    CONSTANT Line_Length  : INTEGER := (4400*30)/Image_FPS;
    CONSTANT Frame_Length : INTEGER := (((750*Image_Height)/483)*Image_Width)/646;
    CONSTANT Integration  : INTEGER := (((720*Image_Exposure)/100)*Image_Height)/483;

    CONSTANT default_init_length : NATURAL := 727;

    SIGNAL d_address : NATURAL range 0 to default_init_length := 0;
    SIGNAL d_sreg    : STD_LOGIC_VECTOR(15 downto 0) := x"0000";
    SIGNAL d_data    : STD_LOGIC_VECTOR(15 downto 0) := x"0000";
    SIGNAL d_dat2_en : STD_LOGIC := '1';

    Generate(if debug_en)
    {
        d_sreg <= default_init(d_address)(0) when ISSP_source(32) = '0' else ISSP_source(31 downto 16);
        d_data <= default_init(d_address)(1) when ISSP_source(32) = '0' else ISSP_source(15 downto 0);
        d_dat2_en <= default_init(d_address)(2)(0) when ISSP_source(32) = '0' else '1';
    }
    Generate(if NOT debug_en)
    {
        d_sreg <= default_init(d_address)(0);
        d_data <= default_init(d_address)(1);
        d_dat2_en <= default_init(d_address)(2)(0);
    }

    TYPE s IS ARRAY (0 to 2) OF STD_LOGIC_VECTOR(15 downto 0);
    TYPE ds IS ARRAY (0 to default_init_length-1) OF s;

    --Default Config:
    CONSTANT default_init : ds :=
    (
        (x"0103",x"0001", x"0000"),
        --delay 100
        (x"0304",x"0003", x"0001"), --27
        (x"0306",x"0064", x"0001"), --27
        (x"0300",x"0006", x"0001"), --27
        (x"0302",x"0001", x"0001"),
        (x"030C",x"0006", x"0001"), --27
        --(x"030E",x"0064", x"0001"), --27
        (x"030E",x"0058", x"0001"), --27
        (x"0308",x"0008", x"0001"), --8Bit
        (x"030A",x"0001", x"0001"),
        (x"3EC0",x"003D", x"0001"), --8Bit
        (x"3EC2",x"0023", x"0001"), --8Bit
        (x"3F02",x"418A", x"0001"), --8Bit
        (x"3F04",x"4225", x"0001"), --8Bit
        (x"3F06",x"00CA", x"0001"), --8Bit
        (x"3F08",x"0207", x"0001"), --8Bit
        (x"3F0A",x"8386", x"0001"), --8Bit
        (x"3F0C",x"0005", x"0001"), --8Bit
        (x"3F1C",x"1011", x"0001"), --8Bit
        (x"3F20",x"8008", x"0001"),
        
        (x"44BC",x"AAAA", x"0001"),
        (x"44BE",x"86E0", x"0001"),
        (x"44C0",x"0087", x"0001"),
        (x"44C6",x"54E3", x"0001"),
        (x"44C8",x"2A41", x"0001"),
        (x"44CC",x"8888", x"0001"),
        (x"44CA",x"8A0E", x"0001"),
        (x"44CE",x"8B64", x"0001"),
        (x"44D0",x"175D", x"0001"),
        (x"44D2",x"098B", x"0001"),
        (x"44D6",x"B206", x"0001"),
        (x"44D8",x"AAF6", x"0001"),
        (x"44DA",x"C001", x"0001"),
        (x"340E",x"A18B", x"0001"),
        (x"44DE",x"34BF", x"0001"),
        (x"44E0",x"3F3F", x"0001"),
        (x"44E2",x"3F21", x"0001"),
        (x"44BE",x"86F0", x"0001"),
        (x"32A4",x"0000", x"0001"),
        (x"36C0",x"0001", x"0001"),
        (x"44C4",x"0FD0", x"0001"),
        (x"44BA",x"3342", x"0001"),
        (x"4000",x"011B", x"0001"),
        (x"4002",x"212A", x"0001"),
        (x"4004",x"45FF", x"0001"),
        (x"4006",x"FFFF", x"0001"),
        (x"4008",x"0810", x"0001"),
        (x"400A",x"0225", x"0001"),
        (x"400C",x"108F", x"0001"),
        (x"400E",x"3003", x"0001"),
        (x"4010",x"92F0", x"0001"),
        (x"4012",x"0097", x"0001"),
        (x"4014",x"30D8", x"0001"),
        (x"4016",x"F007", x"0001"),
        (x"4018",x"919A", x"0001"),
        (x"401A",x"F001", x"0001"),
        (x"401C",x"99F0", x"0001"),
        (x"401E",x"0285", x"0001"),
        (x"4020",x"F000", x"0001"),
        (x"4022",x"30C0", x"0001"),
        (x"4024",x"F004", x"0001"),
        (x"4026",x"8B89", x"0001"),
        (x"4028",x"F007", x"0001"),
        (x"402A",x"9CF0", x"0001"),
        (x"402C",x"0082", x"0001"),
        (x"402E",x"3018", x"0001"),
        (x"4030",x"8BB1", x"0001"),
        (x"4032",x"F001", x"0001"),
        (x"4034",x"B6F0", x"0001"),
        (x"4036",x"0021", x"0001"),
        (x"4038",x"58F0", x"0001"),
        (x"403A",x"0F99", x"0001"),
        (x"403C",x"F000", x"0001"),
        (x"403E",x"98F0", x"0001"),
        (x"4040",x"03A2", x"0001"),
        (x"4042",x"F003", x"0001"),
        (x"4044",x"A296", x"0001"),
        (x"4046",x"B4F0", x"0001"),
        (x"4048",x"029D", x"0001"),
        (x"404A",x"F004", x"0001"),
        (x"404C",x"A1F0", x"0001"),
        (x"404E",x"20A1", x"0001"),
        (x"4050",x"F004", x"0001"),
        (x"4052",x"9DF0", x"0001"),
        (x"4054",x"008B", x"0001"),
        (x"4056",x"F000", x"0001"),
        (x"4058",x"1009", x"0001"),
        (x"405A",x"83F0", x"0001"),
        (x"405C",x"0088", x"0001"),
        (x"405E",x"F002", x"0001"),
        (x"4060",x"3600", x"0001"),
        (x"4062",x"F003", x"0001"),
        (x"4064",x"9088", x"0001"),
        (x"4066",x"F004", x"0001"),
        (x"4068",x"3600", x"0001"),
        (x"406A",x"83F0", x"0001"),
        (x"406C",x"138B", x"0001"),
        (x"406E",x"F014", x"0001"),
        (x"4070",x"A3F0", x"0001"),
        (x"4072",x"03A3", x"0001"),
        (x"4074",x"F004", x"0001"),
        (x"4076",x"9DF0", x"0001"),
        (x"4078",x"04A1", x"0001"),
        (x"407A",x"F020", x"0001"),
        (x"407C",x"A1F0", x"0001"),
        (x"407E",x"4521", x"0001"),
        (x"4080",x"EDB4", x"0001"),
        (x"4082",x"40C2", x"0001"),
        (x"4084",x"F000", x"0001"),
        (x"4086",x"1FF6", x"0001"),
        (x"4088",x"F001", x"0001"),
        (x"408A",x"3003", x"0001"),
        (x"408C",x"84F0", x"0001"),
        (x"408E",x"008B", x"0001"),
        (x"4090",x"F007", x"0001"),
        (x"4092",x"86F0", x"0001"),
        (x"4094",x"0086", x"0001"),
        (x"4096",x"F005", x"0001"),
        (x"4098",x"8080", x"0001"),
        (x"409A",x"8202", x"0001"),
        (x"409C",x"0887", x"0001"),
        (x"409E",x"30C0", x"0001"),
        (x"40A0",x"F000", x"0001"),
        (x"40A2",x"3600", x"0001"),
        (x"40A4",x"F010", x"0001"),
        (x"40A6",x"3600", x"0001"),
        (x"40A8",x"F000", x"0001"),
        (x"40AA",x"30C0", x"0001"),
        (x"40AC",x"8702", x"0001"),
        (x"40AE",x"0882", x"0001"),
        (x"40B0",x"8080", x"0001"),
        (x"40B2",x"F000", x"0001"),
        (x"40B4",x"8202", x"0001"),
        (x"40B6",x"0887", x"0001"),
        (x"40B8",x"30C0", x"0001"),
        (x"40BA",x"F000", x"0001"),
        (x"40BC",x"3600", x"0001"),
        (x"40BE",x"F00F", x"0001"),
        (x"40C0",x"3600", x"0001"),
        (x"40C2",x"F000", x"0001"),
        (x"40C4",x"30C0", x"0001"),
        (x"40C6",x"8702", x"0001"),
        (x"40C8",x"0882", x"0001"),
        (x"40CA",x"F000", x"0001"),
        (x"40CC",x"80F0", x"0001"),
        (x"40CE",x"439F", x"0001"),
        (x"40D0",x"1300", x"0001"),
        (x"40D2",x"F000", x"0001"),
        (x"40D4",x"B7E0", x"0001"),
        (x"40D6",x"E0E0", x"0001"),
        (x"40D8",x"F000", x"0001"),
        (x"40DA",x"0401", x"0001"),
        (x"40DC",x"F003", x"0001"),
        (x"40DE",x"82F0", x"0001"),
        (x"40E0",x"0302", x"0001"),
        (x"40E2",x"0885", x"0001"),
        (x"40E4",x"F015", x"0001"),
        (x"40E6",x"8587", x"0001"),
        (x"40E8",x"F033", x"0001"),
        (x"40EA",x"87F1", x"0001"),
        (x"40EC",x"8388", x"0001"),
        (x"40EE",x"F005", x"0001"),
        (x"40F0",x"88F0", x"0001"),
        (x"40F2",x"0189", x"0001"),
        (x"40F4",x"F000", x"0001"),
        (x"40F6",x"0048", x"0001"),
        (x"40F8",x"F002", x"0001"),
        (x"40FA",x"86F0", x"0001"),
        (x"40FC",x"0482", x"0001"),
        (x"40FE",x"F017", x"0001"),
        (x"4100",x"8AF0", x"0001"),
        (x"4102",x"1780", x"0001"),
        (x"4104",x"F004", x"0001"),
        (x"4106",x"E0E0", x"0001"),
        (x"4108",x"F000", x"0001"),
        (x"410A",x"0401", x"0001"),
        (x"410C",x"F015", x"0001"),
        (x"410E",x"020C", x"0001"),
        (x"4110",x"F016", x"0001"),
        (x"4112",x"87F0", x"0001"),
        (x"4114",x"0287", x"0001"),
        (x"4116",x"F061", x"0001"),
        (x"4118",x"E839", x"0001"),
        (x"411A",x"20F0", x"0001"),
        (x"411C",x"0534", x"0001"),
        (x"411E",x"90F0", x"0001"),
        (x"4120",x"0032", x"0001"),
        (x"4122",x"48F0", x"0001"),
        (x"4124",x"0039", x"0001"),
        (x"4126",x"20F0", x"0001"),
        (x"4128",x"0E39", x"0001"),
        (x"412A",x"20F0", x"0001"),
        (x"412C",x"0032", x"0001"),
        (x"412E",x"48F0", x"0001"),
        (x"4130",x"0034", x"0001"),
        (x"4132",x"90F0", x"0001"),
        (x"4134",x"05C1", x"0001"),
        (x"4136",x"1BF0", x"0001"),
        (x"4138",x"0439", x"0001"),
        (x"413A",x"20F0", x"0001"),
        (x"413C",x"03B0", x"0001"),
        (x"413E",x"F000", x"0001"),
        (x"4140",x"0208", x"0001"),
        (x"4142",x"F0AA", x"0001"),
        (x"4144",x"B0F0", x"0001"),
        (x"4146",x"1CE9", x"0001"),
        (x"4148",x"8A00", x"0001"),
        (x"414A",x"05F0", x"0001"),
        (x"414C",x"93E0", x"0001"),
        (x"414E",x"E0E0", x"0001"),
        (x"4150",x"F063", x"0001"),
        (x"4152",x"0830", x"0001"),
        (x"4154",x"0205", x"0001"),
        (x"4156",x"108F", x"0001"),
        (x"4158",x"3003", x"0001"),
        (x"415A",x"92F0", x"0001"),
        (x"415C",x"0097", x"0001"),
        (x"415E",x"30D8", x"0001"),
        (x"4160",x"F007", x"0001"),
        (x"4162",x"919A", x"0001"),
        (x"4164",x"F001", x"0001"),
        (x"4166",x"99F0", x"0001"),
        (x"4168",x"0285", x"0001"),
        (x"416A",x"F000", x"0001"),
        (x"416C",x"30C0", x"0001"),
        (x"416E",x"F004", x"0001"),
        (x"4170",x"8B89", x"0001"),
        (x"4172",x"F007", x"0001"),
        (x"4174",x"9CF0", x"0001"),
        (x"4176",x"0082", x"0001"),
        (x"4178",x"3018", x"0001"),
        (x"417A",x"8BB1", x"0001"),
        (x"417C",x"F001", x"0001"),
        (x"417E",x"B6F0", x"0001"),
        (x"4180",x"009C", x"0001"),
        (x"4182",x"F00F", x"0001"),
        (x"4184",x"99F0", x"0001"),
        (x"4186",x"0098", x"0001"),
        (x"4188",x"F000", x"0001"),
        (x"418A",x"2148", x"0001"),
        (x"418C",x"F001", x"0001"),
        (x"418E",x"A2F0", x"0001"),
        (x"4190",x"03A2", x"0001"),
        (x"4192",x"96B4", x"0001"),
        (x"4194",x"F002", x"0001"),
        (x"4196",x"9DF0", x"0001"),
        (x"4198",x"04A1", x"0001"),
        (x"419A",x"F020", x"0001"),
        (x"419C",x"A1F0", x"0001"),
        (x"419E",x"049D", x"0001"),
        (x"41A0",x"F000", x"0001"),
        (x"41A2",x"8BF0", x"0001"),
        (x"41A4",x"0010", x"0001"),
        (x"41A6",x"0983", x"0001"),
        (x"41A8",x"F000", x"0001"),
        (x"41AA",x"88F0", x"0001"),
        (x"41AC",x"0236", x"0001"),
        (x"41AE",x"00F0", x"0001"),
        (x"41B0",x"0390", x"0001"),
        (x"41B2",x"88F0", x"0001"),
        (x"41B4",x"0436", x"0001"),
        (x"41B6",x"0083", x"0001"),
        (x"41B8",x"F013", x"0001"),
        (x"41BA",x"8BF0", x"0001"),
        (x"41BC",x"14A3", x"0001"),
        (x"41BE",x"F003", x"0001"),
        (x"41C0",x"A3F0", x"0001"),
        (x"41C2",x"049D", x"0001"),
        (x"41C4",x"F004", x"0001"),
        (x"41C6",x"A1F0", x"0001"),
        (x"41C8",x"20A1", x"0001"),
        (x"41CA",x"F045", x"0001"),
        (x"41CC",x"21ED", x"0001"),
        (x"41CE",x"B440", x"0001"),
        (x"41D0",x"C284", x"0001"),
        (x"41D2",x"1FF6", x"0001"),
        (x"41D4",x"0840", x"0001"),
        (x"41D6",x"F000", x"0001"),
        (x"41D8",x"3003", x"0001"),
        (x"41DA",x"86F0", x"0001"),
        (x"41DC",x"0080", x"0001"),
        (x"41DE",x"8082", x"0001"),
        (x"41E0",x"0208", x"0001"),
        (x"41E2",x"8736", x"0001"),
        (x"41E4",x"C0F0", x"0001"),
        (x"41E6",x"0236", x"0001"),
        (x"41E8",x"C087", x"0001"),
        (x"41EA",x"0208", x"0001"),
        (x"41EC",x"8280", x"0001"),
        (x"41EE",x"8082", x"0001"),
        (x"41F0",x"0208", x"0001"),
        (x"41F2",x"8736", x"0001"),
        (x"41F4",x"C0F0", x"0001"),
        (x"41F6",x"0236", x"0001"),
        (x"41F8",x"C087", x"0001"),
        (x"41FA",x"0208", x"0001"),
        (x"41FC",x"8280", x"0001"),
        (x"41FE",x"8082", x"0001"),
        (x"4200",x"0208", x"0001"),
        (x"4202",x"8736", x"0001"),
        (x"4204",x"C0F0", x"0001"),
        (x"4206",x"0236", x"0001"),
        (x"4208",x"C087", x"0001"),
        (x"420A",x"0208", x"0001"),
        (x"420C",x"8280", x"0001"),
        (x"420E",x"8082", x"0001"),
        (x"4210",x"0208", x"0001"),
        (x"4212",x"8736", x"0001"),
        (x"4214",x"C0F0", x"0001"),
        (x"4216",x"0236", x"0001"),
        (x"4218",x"C087", x"0001"),
        (x"421A",x"9F13", x"0001"),
        (x"421C",x"0002", x"0001"),
        (x"421E",x"0DB7", x"0001"),
        (x"4220",x"E0E0", x"0001"),
        (x"4222",x"E0E0", x"0001"),
        (x"4224",x"E0E0", x"0001"),
        (x"4226",x"E0E0", x"0001"),
        (x"4228",x"F013", x"0001"),
        (x"422A",x"80F0", x"0001"),
        (x"422C",x"3102", x"0001"),
        (x"422E",x"3410", x"0001"),
        (x"4230",x"CF30", x"0001"),
        (x"4232",x"03F0", x"0001"),
        (x"4234",x"00B2", x"0001"),
        (x"4236",x"30C0", x"0001"),
        (x"4238",x"3018", x"0001"),
        (x"423A",x"97B5", x"0001"),
        (x"423C",x"F004", x"0001"),
        (x"423E",x"91F0", x"0001"),
        (x"4240",x"009A", x"0001"),
        (x"4242",x"F001", x"0001"),
        (x"4244",x"99F0", x"0001"),
        (x"4246",x"0330", x"0001"),
        (x"4248",x"18F0", x"0001"),
        (x"424A",x"0085", x"0001"),
        (x"424C",x"F000", x"0001"),
        (x"424E",x"30C0", x"0001"),
        (x"4250",x"9E40", x"0001"),
        (x"4252",x"4220", x"0001"),
        (x"4254",x"1889", x"0001"),
        (x"4256",x"4104", x"0001"),
        (x"4258",x"82A0", x"0001"),
        (x"425A",x"F002", x"0001"),
        (x"425C",x"8B9C", x"0001"),
        (x"425E",x"F010", x"0001"),
        (x"4260",x"99F0", x"0001"),
        (x"4262",x"0098", x"0001"),
        (x"4264",x"F003", x"0001"),
        (x"4266",x"A296", x"0001"),
        (x"4268",x"F001", x"0001"),
        (x"426A",x"B4A2", x"0001"),
        (x"426C",x"F004", x"0001"),
        (x"426E",x"9DF0", x"0001"),
        (x"4270",x"04A1", x"0001"),
        (x"4272",x"F028", x"0001"),
        (x"4274",x"8BA1", x"0001"),
        (x"4276",x"1009", x"0001"),
        (x"4278",x"83F0", x"0001"),
        (x"427A",x"0136", x"0001"),
        (x"427C",x"00F0", x"0001"),
        (x"427E",x"009D", x"0001"),
        (x"4280",x"88F0", x"0001"),
        (x"4282",x"0888", x"0001"),
        (x"4284",x"F000", x"0001"),
        (x"4286",x"3600", x"0001"),
        (x"4288",x"8390", x"0001"),
        (x"428A",x"F096", x"0001"),
        (x"428C",x"8BF0", x"0001"),
        (x"428E",x"0CA3", x"0001"),
        (x"4290",x"F003", x"0001"),
        (x"4292",x"A3F0", x"0001"),
        (x"4294",x"049D", x"0001"),
        (x"4296",x"F004", x"0001"),
        (x"4298",x"A1F0", x"0001"),
        (x"429A",x"20A1", x"0001"),
        (x"429C",x"F043", x"0001"),
        (x"429E",x"9DB4", x"0001"),
        (x"42A0",x"F015", x"0001"),
        (x"42A2",x"8B91", x"0001"),
        (x"42A4",x"848E", x"0001"),
        (x"42A6",x"F01E", x"0001"),
        (x"42A8",x"B8F1", x"0001"),
        (x"42AA",x"B3B2", x"0001"),
        (x"42AC",x"F060", x"0001"),
        (x"42AE",x"A6B9", x"0001"),
        (x"42B0",x"848E", x"0001"),
        (x"42B2",x"F004", x"0001"),
        (x"42B4",x"0202", x"0001"),
        (x"42B6",x"F015", x"0001"),
        (x"42B8",x"B2F0", x"0001"),
        (x"42BA",x"0691", x"0001"),
        (x"42BC",x"83B8", x"0001"),
        (x"42BE",x"F000", x"0001"),
        (x"42C0",x"3600", x"0001"),
        (x"42C2",x"F00D", x"0001"),
        (x"42C4",x"3600", x"0001"),
        (x"42C6",x"83F0", x"0001"),
        (x"42C8",x"029C", x"0001"),
        (x"42CA",x"F008", x"0001"),
        (x"42CC",x"9CF0", x"0001"),
        (x"42CE",x"128B", x"0001"),
        (x"42D0",x"F006", x"0001"),
        (x"42D2",x"3018", x"0001"),
        (x"42D4",x"A3F0", x"0001"),
        (x"42D6",x"04A3", x"0001"),
        (x"42D8",x"F003", x"0001"),
        (x"42DA",x"9DF0", x"0001"),
        (x"42DC",x"6A30", x"0001"),
        (x"42DE",x"189D", x"0001"),
        (x"42E0",x"F002", x"0001"),
        (x"42E2",x"8BF0", x"0001"),
        (x"42E4",x"0082", x"0001"),
        (x"42E6",x"F004", x"0001"),
        (x"42E8",x"30C0", x"0001"),
        (x"42EA",x"F014", x"0001"),
        (x"42EC",x"30C0", x"0001"),
        (x"42EE",x"F004", x"0001"),
        (x"42F0",x"82F0", x"0001"),
        (x"42F2",x"0D90", x"0001"),
        (x"42F4",x"F002", x"0001"),
        (x"42F6",x"8BF0", x"0001"),
        (x"42F8",x"018C", x"0001"),
        (x"42FA",x"8FF0", x"0001"),
        (x"42FC",x"3E30", x"0001"),
        (x"42FE",x"18A2", x"0001"),
        (x"4300",x"F003", x"0001"),
        (x"4302",x"A2F0", x"0001"),
        (x"4304",x"049D", x"0001"),
        (x"4306",x"F036", x"0001"),
        (x"4308",x"9DF0", x"0001"),
        (x"430A",x"0A30", x"0001"),
        (x"430C",x"1889", x"0001"),
        (x"430E",x"B5F0", x"0001"),
        (x"4310",x"018B", x"0001"),
        (x"4312",x"F002", x"0001"),
        (x"4314",x"97F0", x"0001"),
        (x"4316",x"0017", x"0001"),
        (x"4318",x"A621", x"0001"),
        (x"431A",x"CD40", x"0001"),
        (x"431C",x"C230", x"0001"),
        (x"431E",x"0710", x"0001"),
        (x"4320",x"4984", x"0001"),
        (x"4322",x"F00C", x"0001"),
        (x"4324",x"80F0", x"0001"),
        (x"4326",x"1486", x"0001"),
        (x"4328",x"F000", x"0001"),
        (x"432A",x"86F0", x"0001"),
        (x"432C",x"0C80", x"0001"),
        (x"432E",x"8283", x"0001"),
        (x"4330",x"8730", x"0001"),
        (x"4332",x"C036", x"0001"),
        (x"4334",x"00F0", x"0001"),
        (x"4336",x"1030", x"0001"),
        (x"4338",x"C036", x"0001"),
        (x"433A",x"0087", x"0001"),
        (x"433C",x"8382", x"0001"),
        (x"433E",x"8080", x"0001"),
        (x"4340",x"F000", x"0001"),
        (x"4342",x"8283", x"0001"),
        (x"4344",x"8730", x"0001"),
        (x"4346",x"C036", x"0001"),
        (x"4348",x"00F0", x"0001"),
        (x"434A",x"0F30", x"0001"),
        (x"434C",x"C0F0", x"0001"),
        (x"434E",x"0036", x"0001"),
        (x"4350",x"0087", x"0001"),
        (x"4352",x"8382", x"0001"),
        (x"4354",x"F000", x"0001"),
        (x"4356",x"80F1", x"0001"),
        (x"4358",x"D9B8", x"0001"),
        (x"435A",x"F00D", x"0001"),
        (x"435C",x"B7F0", x"0001"),
        (x"435E",x"019F", x"0001"),
        (x"4360",x"F02B", x"0001"),
        (x"4362",x"1300", x"0001"),
        (x"4364",x"B981", x"0001"),
        (x"4366",x"E0E0", x"0001"),
        (x"4368",x"E0E0", x"0001"),
        (x"436A",x"E0E0", x"0001"),
        (x"436C",x"E0E0", x"0001"),
        (x"436E",x"E0E0", x"0001"),
        (x"4370",x"E0E0", x"0001"),
        (x"4372",x"E0E0", x"0001"),
        (x"4374",x"E0E0", x"0001"),
        (x"4376",x"E0E0", x"0001"),
        (x"4378",x"E0E0", x"0001"),
        (x"437A",x"E0E0", x"0001"),
        (x"437C",x"E0E0", x"0001"),
        (x"437E",x"E0E0", x"0001"),
        (x"4380",x"E0E0", x"0001"),
        (x"4382",x"E0E0", x"0001"),
        (x"4384",x"E0E0", x"0001"),
        (x"4386",x"E0E0", x"0001"),
        (x"4388",x"E0E0", x"0001"),
        (x"438A",x"E0E0", x"0001"),
        (x"438C",x"E0E0", x"0001"),
        (x"438E",x"E0E0", x"0001"),
        (x"4390",x"E0E0", x"0001"),
        (x"4392",x"E0E0", x"0001"),
        (x"4394",x"E0E0", x"0001"),
        (x"4396",x"E0E0", x"0001"),
        (x"4398",x"E0E0", x"0001"),
        (x"439A",x"E0E0", x"0001"),
        (x"439C",x"E0E0", x"0001"),
        (x"439E",x"E0E0", x"0001"),
        (x"43A0",x"E0E0", x"0001"),
        (x"43A2",x"E0E0", x"0001"),
        (x"43A4",x"E0E0", x"0001"),
        (x"43A6",x"E0E0", x"0001"),
        (x"43A8",x"E0E0", x"0001"),
        (x"43AA",x"E0E0", x"0001"),
        (x"43AC",x"E0E0", x"0001"),
        (x"43AE",x"E0E0", x"0001"),
        (x"43B0",x"E0E0", x"0001"),
        (x"43B2",x"E0E0", x"0001"),
        (x"43B4",x"E0E0", x"0001"),
        (x"43B6",x"E0E0", x"0001"),
        (x"43B8",x"E0E0", x"0001"),
        (x"43BA",x"E0E0", x"0001"),
        (x"43BC",x"E0E0", x"0001"),
        (x"43BE",x"E0E0", x"0001"),
        (x"43C0",x"E0E0", x"0001"),
        (x"43C2",x"E0E0", x"0001"),
        (x"43C4",x"E0E0", x"0001"),
        (x"43C6",x"E0E0", x"0001"),
        (x"43C8",x"E0E0", x"0001"),
        (x"43CA",x"E0E0", x"0001"),
        (x"43CC",x"E0E0", x"0001"),
        (x"43CE",x"E0E0", x"0001"),
        (x"43D0",x"E0E0", x"0001"),
        (x"43D2",x"E0E0", x"0001"),
        (x"43D4",x"E0E0", x"0001"),
        (x"43D6",x"E0E0", x"0001"),
        (x"43D8",x"E0E0", x"0001"),
        (x"43DA",x"E0E0", x"0001"),
        (x"43DC",x"E0E0", x"0001"),
        (x"43DE",x"E0E0", x"0001"),
        (x"43E0",x"E0E0", x"0001"),
        (x"43E2",x"E0E0", x"0001"),
        (x"43E4",x"E0E0", x"0001"),
        (x"43E6",x"E0E0", x"0001"),
        (x"43E8",x"E0E0", x"0001"),
        (x"43EA",x"E0E0", x"0001"),
        (x"43EC",x"E0E0", x"0001"),
        (x"43EE",x"E0E0", x"0001"),
        (x"43F0",x"E0E0", x"0001"),
        (x"43F2",x"E0E0", x"0001"),
        (x"43F4",x"E0E0", x"0001"),
        (x"43F6",x"E0E0", x"0001"),
        (x"43F8",x"E0E0", x"0001"),
        (x"43FA",x"E0E0", x"0001"),
        (x"43FC",x"E0E0", x"0001"),
        (x"43FE",x"E0E0", x"0001"),
        (x"4400",x"E0E0", x"0001"),
        (x"4402",x"E0E0", x"0001"),
        (x"4404",x"E0E0", x"0001"),
        (x"4406",x"E0E0", x"0001"),
        (x"4408",x"E0E0", x"0001"),
        (x"440A",x"E0E0", x"0001"),
        (x"440C",x"E0E0", x"0001"),
        (x"440E",x"E0E0", x"0001"),
        (x"4410",x"E0E0", x"0001"),
        (x"4412",x"E0E0", x"0001"),
        (x"4414",x"E0E0", x"0001"),
        (x"4416",x"E0E0", x"0001"),
        (x"4418",x"E0E0", x"0001"),
        (x"441A",x"E0E0", x"0001"),
        (x"441C",x"E0E0", x"0001"),
        (x"441E",x"E0E0", x"0001"),
        (x"4420",x"E0E0", x"0001"),
        (x"4422",x"E0E0", x"0001"),
        (x"4424",x"E0E0", x"0001"),
        (x"4426",x"E0E0", x"0001"),
        (x"4428",x"E0E0", x"0001"),
        (x"442A",x"E0E0", x"0001"),
        (x"442C",x"E0E0", x"0001"),
        (x"442E",x"E0E0", x"0001"),
        (x"4430",x"E0E0", x"0001"),
        (x"4432",x"E0E0", x"0001"),
        (x"4434",x"E0E0", x"0001"),
        (x"4436",x"E0E0", x"0001"),
        (x"4438",x"E0E0", x"0001"),
        (x"443A",x"E0E0", x"0001"),
        (x"443C",x"E0E0", x"0001"),
        (x"443E",x"E0E0", x"0001"),
        (x"4440",x"E0E0", x"0001"),
        (x"4442",x"E0E0", x"0001"),
        (x"4444",x"E0E0", x"0001"),
        (x"4446",x"E0E0", x"0001"),
        (x"4448",x"E0E0", x"0001"),
        (x"444A",x"E0E0", x"0001"),
        (x"444C",x"E0E0", x"0001"),
        (x"444E",x"E0E0", x"0001"),
        (x"4450",x"E0E0", x"0001"),
        (x"4452",x"E0E0", x"0001"),
        (x"4454",x"E0E0", x"0001"),
        (x"4456",x"E0E0", x"0001"),
        (x"4458",x"E0E0", x"0001"),
        (x"445A",x"E0E0", x"0001"),
        (x"445C",x"E0E0", x"0001"),
        (x"445E",x"E0E0", x"0001"),
        (x"4460",x"E0E0", x"0001"),
        (x"4462",x"E0E0", x"0001"),
        (x"4464",x"E0E0", x"0001"),
        (x"4466",x"E0E0", x"0001"),
        (x"4468",x"E0E0", x"0001"),
        (x"446A",x"E0E0", x"0001"),
        (x"446C",x"E0E0", x"0001"),
        (x"446E",x"E0E0", x"0001"),
        (x"4470",x"E0E0", x"0001"),
        (x"4472",x"E0E0", x"0001"),
        (x"4474",x"E0E0", x"0001"),
        (x"4476",x"E0E0", x"0001"),
        (x"4478",x"E0E0", x"0001"),
        (x"447A",x"E0E0", x"0001"),
        (x"447C",x"E0E0", x"0001"),
        (x"447E",x"E0E0", x"0001"),
        (x"4480",x"E0E0", x"0001"),
        (x"4482",x"E0E0", x"0001"),
        (x"4484",x"E0E0", x"0001"),
        (x"4486",x"E0E0", x"0001"),
        (x"4488",x"E0E0", x"0001"),
        (x"448A",x"E0E0", x"0001"),
        (x"448C",x"E0E0", x"0001"),
        (x"448E",x"E0E0", x"0001"),
        (x"4490",x"E0E0", x"0001"),
        (x"4492",x"E0E0", x"0001"),
        (x"4494",x"E0E0", x"0001"),
        (x"4496",x"E0E0", x"0001"),
        (x"4498",x"E0E0", x"0001"),
        (x"449A",x"E0E0", x"0001"),
        (x"449C",x"E0E0", x"0001"),
        (x"449E",x"E0E0", x"0001"),
        (x"44A0",x"E0E0", x"0001"),
        (x"44A2",x"E0E0", x"0001"),
        (x"44A4",x"E0E0", x"0001"),
        (x"44A6",x"E0E0", x"0001"),
        (x"44A8",x"E0E0", x"0001"),
        (x"44AA",x"E0E0", x"0001"),
        (x"44AC",x"E0E0", x"0001"),
        (x"44AE",x"E0E0", x"0001"),
        (x"44B0",x"E0E0", x"0001"),
        (x"44B2",x"E0E0", x"0001"),
        (x"44B4",x"E0E0", x"0001"),
        (x"3980",x"0001", x"0001"),
        (x"3340",x"0C60", x"0001"),
        (x"3F7C",x"0001", x"0001"),
        
        (x"0344",x"0008", x"0001"),
        (x"0348",x"0F07", x"0001"),
        (x"0346",x"0008", x"0001"),
        (x"034A",x"0877", x"0001"),
        (x"034C",STD_LOGIC_VECTOR(TO_UNSIGNED(Image_Width*2, 16)), x"0001"),
        (x"034E",STD_LOGIC_VECTOR(TO_UNSIGNED(Image_Height*2, 16)), x"0001"),
        (x"0380",x"0001", x"0001"),
        (x"0382",x"0001", x"0001"),
        (x"0384",x"0001", x"0001"),
        (x"0386",x"0001", x"0001"),
        (x"0900",x"0000", x"0000"),
        (x"0901",x"0011", x"0000"),
        (x"0100",x"0000", x"0000"),
        (x"0342",STD_LOGIC_VECTOR(TO_UNSIGNED(Line_Length, 16)), x"0001"),
        (x"0340",STD_LOGIC_VECTOR(TO_UNSIGNED(Frame_Length, 16)), x"0001"),
        (x"0202",STD_LOGIC_VECTOR(TO_UNSIGNED(Integration,16)), x"0001"),
        (x"0112",x"0808", x"0001"), --8 Bit
        
        (x"0206",x"0100", x"0001"),
        (x"0208",x"0000", x"0001"),
        (x"0226",x"0100", x"0001"),
        (x"0228",x"0000", x"0001"),
        (x"020E",x"0100", x"0001"),
        (x"0204",x"0100", x"0001"),
        (x"3EC4",x"0204", x"0001"),
        (x"3EC6",x"0000", x"0001"),
        
        (x"0220",x"0073", x"0001"),
        (x"3040",x"0030", x"0001"),
        (x"0224",x"0010", x"0001"),
        
        (x"3600",x"94D8", x"0001"),
        (x"5500",x"0000", x"0001"),
        (x"5502",x"0001", x"0001"),
        (x"5504",x"0006", x"0001"),
        (x"5506",x"0008", x"0001"),
        (x"5508",x"000F", x"0001"),
        (x"550A",x"0010", x"0001"),
        (x"550C",x"0011", x"0001"),
        (x"550E",x"0012", x"0001"),
        (x"5510",x"0016", x"0001"),
        (x"5512",x"0018", x"0001"),
        (x"5514",x"0021", x"0001"),
        (x"5516",x"0023", x"0001"),
        (x"5518",x"0026", x"0001"),
        (x"551A",x"0028", x"0001"),
        (x"551C",x"002F", x"0001"),
        (x"551E",x"0030", x"0001"),
        (x"5430",x"0100", x"0001"),
        (x"5432",x"2106", x"0001"),
        (x"5434",x"1103", x"0001"),
        (x"5436",x"3103", x"0001"),
        (x"5438",x"6103", x"0001"),
        (x"543A",x"9103", x"0001"),
        (x"543C",x"A103", x"0001"),
        (x"543E",x"D103", x"0001"),
        (x"5440",x"F110", x"0001"),
        (x"5442",x"F139", x"0001"),
        (x"5444",x"F1BB", x"0001"),
        (x"5446",x"F271", x"0001"),
        (x"5448",x"F374", x"0001"),
        (x"544A",x"F4E0", x"0001"),
        (x"544C",x"F6E3", x"0001"),
        (x"544E",x"F9BB", x"0001"),
        (x"5450",x"FDBF", x"0001"),
        (x"5452",x"FDBF", x"0001"),
        (x"5454",x"FFFA", x"0001"),
        (x"5456",x"5557", x"0001"),
        (x"5458",x"0005", x"0001"),
        (x"545A",x"A550", x"0001"),
        (x"545C",x"AAAA", x"0001"),
        (x"545E",x"000A", x"0001"),
        (x"54A0",x"2269", x"0001"),
        (x"54A2",x"098B", x"0001"),
        (x"54A4",x"098B", x"0001"),
        (x"54A6",x"098B", x"0001"),
        (x"54D8",x"2263", x"0001"),
        (x"54DA",x"54E3", x"0001"),
        (x"54DC",x"54E3", x"0001"),
        (x"54DE",x"54E3", x"0001"),
        
        (x"3062",x"1414", x"0001"), --Gain
        (x"3060",x"0007", x"0001"),
        
        --delay 5o
        (x"0100",x"0001", x"0000")
    );
}